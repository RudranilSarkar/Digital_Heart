function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 27-Jun-2018 05:43:06.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx5 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.21512614;0.058989904;-1.904751603;57.26056338;4.493198771];
x1_step1.gain = [8.89134467828903;1.74551130618162;1.09588717734112;0.00121066149435679;0.0154284648347053];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.8382095114481121;1.7789473559023337;-1.3921249979647594;-0.70397569647644276;-1.2215592611568835;0.43504029030152025;-0.75422420837425208;-0.74406279491912275;-2.0344946737835277;-1.6720614752172298];
IW1_1 = [-0.32629546115857783 -0.84594657165747955 1.8287735031945114 -1.4282347865187996 2.332092540826725;-0.81576265837636464 1.0019955399115579 -0.14551268909871221 -1.7659793673463233 0.17719074056776735;0.053651215046915564 -0.34205305221489046 -1.2306792942114251 1.7070910451365231 0.76234819581225455;1.0300908015594306 -0.34142179063974232 0.90830653475351963 -1.0730198950219385 -1.2746605032898033;-0.48241586742668774 -1.0877585575314017 -0.17731578470424747 -0.54747700227194329 1.9295877785377147;-0.53817165162564706 -3.1037501356230948 0.90787008140990333 0.044513610236177135 0.69448779706624664;-0.45648977907925886 0.14219473046074713 1.2683078778442072 1.4285677767362841 -1.8143944581777243;1.4322218033333609 -0.69243231336018629 -3.1393715757244087 -0.41401182492622557 0.99882602741245385;-0.56252454600196111 1.0942888245692795 0.80986214454038519 1.3252835352351595 -0.84355535089665246;-0.41619086281001028 1.4359879187294895 0.13860795834340001 -1.8099125232502171 0.4092471140844513];

% Layer 2
b2 = 0.77725285492463458;
LW2_1 = [-2.0238781714652121 0.2205401426688158 -1.5743240904635623 -0.58882430232847649 -1.620224541298126 1.7571430179583161 0.82284692042400021 1.9914087651383714 -1.5103043943059868 0.36020063830340415];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Output 1
y1 = a2;
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
